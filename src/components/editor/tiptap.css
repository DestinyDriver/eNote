/* TipTap Editor Styles */
.prose {
  max-width: none;
}

.prose h1 {
  font-size: 1.875rem;
  font-weight: 700;
  margin-bottom: 1rem;
  margin-top: 1.5rem;
  line-height: 1.2;
}

.prose h2 {
  font-size: 1.5rem;
  font-weight: 600;
  margin-bottom: 0.75rem;
  margin-top: 1.25rem;
  line-height: 1.3;
}

.prose h3 {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
  margin-top: 1rem;
  line-height: 1.4;
}

.prose p {
  margin-bottom: 1rem;
  line-height: 1.6;
}

.prose ul, .prose ol {
  margin-bottom: 1rem;
  padding-left: 1.5rem;
}

.prose li {
  margin-bottom: 0.25rem;
}

.prose blockquote {
  border-left: 4px solid #e5e7eb;
  padding-left: 1rem;
  margin: 1rem 0;
  font-style: italic;
  color: #6b7280;
}

.prose pre {
  background-color: #1e293b;
  color: #e2e8f0;
  border-radius: 0.5rem;
  padding: 1rem;
  margin: 1rem 0;
  overflow-x: auto;
  font-family: 'Fira Code', 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
  font-size: 0.875rem;
  border: 1px solid #374151;
  position: relative;
}

.prose pre::before {
  content: attr(data-language);
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  background: rgba(0, 0, 0, 0.3);
  color: #9ca3af;
  padding: 0.125rem 0.375rem;
  border-radius: 0.25rem;
  font-size: 0.75rem;
  text-transform: uppercase;
  font-weight: 500;
}

.prose code {
  background-color: #f3f4f6;
  color: #dc2626;
  padding: 0.125rem 0.25rem;
  border-radius: 0.25rem;
  font-family: 'Fira Code', 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
  font-size: 0.875rem;
}

.prose pre code {
  background: transparent;
  color: inherit;
  padding: 0;
  border-radius: 0;
}

.prose hr {
  border: none;
  border-top: 2px solid #e5e7eb;
  margin: 2rem 0;
}

.prose strong {
  font-weight: 600;
}

.prose em {
  font-style: italic;
}

.prose a {
  color: #2563eb;
  text-decoration: underline;
}

.prose a:hover {
  color: #1d4ed8;
}

/* ProseMirror specific styles */
.ProseMirror {
  outline: none;
}

.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: #9ca3af;
  pointer-events: none;
  height: 0;
}

/* Syntax highlighting theme overrides */
.prose .hljs {
  background: #1e293b !important;
  color: #e2e8f0;
}

/* Custom syntax highlighting for different languages */
.prose pre[data-language="javascript"]::before { content: "JavaScript"; }
.prose pre[data-language="typescript"]::before { content: "TypeScript"; }
.prose pre[data-language="python"]::before { content: "Python"; }
.prose pre[data-language="java"]::before { content: "Java"; }
.prose pre[data-language="cpp"]::before { content: "C++"; }
.prose pre[data-language="html"]::before { content: "HTML"; }
.prose pre[data-language="css"]::before { content: "CSS"; }
.prose pre[data-language="sql"]::before { content: "SQL"; }
.prose pre[data-language="json"]::before { content: "JSON"; }
.prose pre[data-language="yaml"]::before { content: "YAML"; }

/* CodeBlock selection styles */
.ProseMirror .hljs {
  border-radius: 0.5rem;
}

/* Focus styles for code blocks */
.ProseMirror pre:focus-within {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

/* Task List Styles */
.ProseMirror .task-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

.ProseMirror .task-item {
  display: flex;
  align-items: flex-start;
  margin: 0.25rem 0;
  padding-left: 0;
}

.ProseMirror .task-item > label {
  flex: 0 0 auto;
  margin-right: 0.5rem;
  user-select: none;
  margin-top: 0.125rem;
}

.ProseMirror .task-item > div {
  flex: 1 1 auto;
}

.ProseMirror .task-item input[type="checkbox"] {
  margin: 0;
  cursor: pointer;
  width: 1rem;
  height: 1rem;
}

.ProseMirror .task-item[data-checked="true"] > div {
  opacity: 0.6;
  text-decoration: line-through;
}

/* Horizontal Rule Styles */
.ProseMirror .horizontal-rule {
  border: none;
  border-top: 2px solid #e5e7eb;
  margin: 2rem 0;
  cursor: pointer;
}

.ProseMirror .horizontal-rule:hover {
  border-top-color: #9ca3af;
}

/* Code Block Styles */
.ProseMirror pre {
  background: #1e1e1e;
  color: #d4d4d4;
  font-family: 'JetBrains Mono', 'Fira Code', 'SF Mono', Monaco, Inconsolata, 'Roboto Mono', monospace;
  padding: 1rem;
  border-radius: 0.5rem;
  overflow-x: auto;
  margin: 1rem 0;
  border: 1px solid #374151;
}

.ProseMirror pre code {
  color: inherit;
  padding: 0;
  background: none;
  font-size: 0.875rem;
  line-height: 1.5;
}

/* Placeholder styles */
.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: #9ca3af;
  pointer-events: none;
  height: 0;
}

/* Focus styles */
.ProseMirror:focus {
  outline: none;
}

/* General prose improvements */
.ProseMirror {
  padding: 1rem;
  min-height: 200px;
}

.ProseMirror h1,
.ProseMirror h2,
.ProseMirror h3 {
  margin-top: 1.5rem;
  margin-bottom: 0.5rem;
  line-height: 1.2;
}

.ProseMirror h1:first-child,
.ProseMirror h2:first-child,
.ProseMirror h3:first-child {
  margin-top: 0;
}

.ProseMirror p {
  margin: 0.75rem 0;
}

.ProseMirror p:first-child {
  margin-top: 0;
}

.ProseMirror p:last-child {
  margin-bottom: 0;
}

.ProseMirror ul,
.ProseMirror ol {
  margin: 0.75rem 0;
  padding-left: 1.5rem;
}

.ProseMirror blockquote {
  border-left: 4px solid #e5e7eb;
  padding-left: 1rem;
  margin: 1rem 0;
  font-style: italic;
  color: #6b7280;
}

.ProseMirror code {
  background: #f3f4f6;
  padding: 0.125rem 0.25rem;
  border-radius: 0.25rem;
  font-size: 0.875em;
  color: #dc2626;
}

/* Syntax highlighting improvements */
.hljs-keyword {
  color: #569cd6;
}

.hljs-string {
  color: #ce9178;
}

.hljs-comment {
  color: #6a9955;
  font-style: italic;
}

.hljs-number {
  color: #b5cea8;
}

.hljs-function {
  color: #dcdcaa;
}

.hljs-class,
.hljs-title {
  color: #4ec9b0;
}

.hljs-variable {
  color: #9cdcfe;
}

.hljs-operator {
  color: #d4d4d4;
}

.hljs-literal {
  color: #569cd6;
} 